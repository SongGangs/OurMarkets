<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
          http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
          http://www.springframework.org/schema/security
          http://www.springframework.org/schema/security/spring-security-3.2.xsd">
<!-- 配置相关资源的访问权限 -->
	<security:http auto-config="true"  use-expressions="true">
		<!-- 配置相关地址的访问权限 -->
		<security:intercept-url pattern="/Login"
			access="hasRole('ROLE_USER')" />
		<!-- 配置登录页面和登录成功页面 如果不配置将会使用Spring Security自带的页面 -->
		<security:form-login login-page="/Home/Index"
			authentication-failure-url="/Other" default-target-url="/Index"
			always-use-default-target="true" />
		<!--我们自己配置登录成功的代理 所以这个属性不需要了default-target-url="/index" -->

		<!-- 用户退出的跳转页面 -->
<!-- 		<security:logout invalidate-session="true" -->
<!-- 			logout-success-url="/MyView/Index0" logout-url="/MyView/Index1" /> -->
		<!-- 会话管理，设置最多登录异常，error-if-maximum-exceeded = false为第二次登录就会使前一个登录失效 -->
		<security:session-management>
			<security:concurrency-control
				max-sessions="1" error-if-maximum-exceeded="false" />
		</security:session-management>
	</security:http>

	<!-- 注册用户服务bean 该bean必须实现UserDetailsService -->
	<bean id="customUserDetailsService" class="ourmarket.spring.security.MyUserDetailService" />

	<!-- 配置权限管理器 -->
   <security:authentication-manager>
        <!-- 配置用于服务bean -->
        <security:authentication-provider user-service-ref="customUserDetailsService">
       <!-- 	<security:password-encoder hash="md5" base64="false" /> -->
        </security:authentication-provider>
   </security:authentication-manager>

<!-- 	<security:jdbc-user-service id="userService"   data-source-ref="dataSource" -->
<!-- 　　　　　　users-by-username="select username,password, true from user where username=?" -->
<!-- 　　　　　　authories-by-username-query="select username,role from user_role where username=?" >   -->
<!-- 	</security:jdbc-user-service> -->

	

</beans>